# Copyright (c) 2021, 2022 Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
# 
- hosts: localhost
  tags: gateway_iam_pre_reqs
  collections:
    - oracle.oci
  vars:
    tenancy_ocid: "{{ lookup('env', 'tenancy_ocid') }}"
    compartment_ocid: "{{ lookup('env', 'compartment_ocid') }}"  
    cred_dynamic_group_name: "credential_gateway_dyn_group"
    mgmt_gw_dynamic_group_name: "mgmt_gateway_dyn_group"
    iam_policy_name: "gateway_policy"
    cred_dynamic_rule: "ANY { ALL {resource.type = 'certificateauthority', resource.compartment.id = '{{compartment_ocid}}' }}"
    mgmt_dynamic_rule: "ANY {ALL {resource.type='managementagent', resource.compartment.id = '{{compartment_ocid}}' } }"
    
  tasks:

    - name: Check pre-requisites
      fail:
        msg: "Environment variable {{item}} not set. Please declare an environment variable with an appropriate value for the sample to work."
      when: item not in ansible_env
      with_items:
        - "compartment_ocid"
        - "tenancy_ocid"

    - name: Create Credential dynamic group
      oci_identity_dynamic_group:
        # required
        compartment_id: "{{tenancy_ocid}}"
        name: "{{cred_dynamic_group_name}}"
        description: Identity & Management Credential Dynamic Group for Management Gateway
        matching_rule: "{{cred_dynamic_rule}}"
      register: cred_result
    - debug:
        msg: "{{cred_result}}"

    - name: Create Management Gateway dynamic group
      oci_identity_dynamic_group:
        # required
        compartment_id: "{{tenancy_ocid}}"
        name: "{{mgmt_gw_dynamic_group_name}}"
        description: Identity & Management Dynamic Group for Management Gateway
        matching_rule: "{{mgmt_dynamic_rule}}"
      register: mgmt_gw_result
    - debug:
        msg: "{{mgmt_gw_result}}"

    - name: Create Identity & Management Policy
      oci_identity_policy:
        # required
        compartment_id: "{{tenancy_ocid}}"
        name: "{{iam_policy_name}}"
        description: Identity & Management Policies for Management Gateway
        statements: ["Allow DYNAMIC-GROUP {{cred_dynamic_group_name}} to USE certificate-authority-delegates in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{cred_dynamic_group_name}} to USE vaults in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{cred_dynamic_group_name}} to USE keys in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to READ certificate-authority-bundle in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to READ leaf-certificate-bundle in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to MANAGE certificate-authorities in compartment id {{compartment_ocid}} where any{request.permission='CERTIFICATE_AUTHORITY_CREATE', request.permission='CERTIFICATE_AUTHORITY_INSPECT', request.permission='CERTIFICATE_AUTHORITY_READ'}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to MANAGE leaf-certificates in compartment id {{compartment_ocid}} where  any{request.permission='CERTIFICATE_CREATE', request.permission='CERTIFICATE_INSPECT', request.permission ='CERTIFICATE_UPDATE', request.permission='CERTIFICATE_READ'}",
                "ALLOW DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} TO MANAGE leaf-certificates in compartment id {{compartment_ocid}} where all{request.permission='CERTIFICATE_DELETE', target.leaf-certificate.name=request.principal.id}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to MANAGE vaults in compartment id {{compartment_ocid}} where any{request.permission='VAULT_CREATE', request.permission='VAULT_INSPECT', request.permission='VAULT_READ', request.permission='VAULT_CREATE_KEY', request.permission='VAULT_IMPORT_KEY', request.permission='VAULT_CREATE_SECRET'}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to MANAGE keys in compartment id {{compartment_ocid}} where any{request.permission='KEY_CREATE', request.permission='KEY_INSPECT', request.permission='KEY_READ'}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to USE certificate-authority-delegates in compartment id {{compartment_ocid}}",
                "Allow DYNAMIC-GROUP {{mgmt_gw_dynamic_group_name}} to USE key-delegate in compartment id {{compartment_ocid}}" ]
      register: policy_result
      tags: setup_policy
    - debug:
        msg: "{{policy_result}}"